name: Build Game Core

env:
  workdir: ./game_core

on:
  push:
    branches:
      - main
    paths:
      - 'game_core/**'
      - '.github/workflows/build_github_game_core.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'game_core/**'
      - '.github/workflows/build_github_game_core.yml'

jobs:
  test:
    name: Run tests
    environment: Prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Install dependencies
        working-directory: ${{ env.workdir }}
        run: |
          pip install pipenv
          pipenv install --deploy --dev
          
      - name: Running tests
        working-directory: ${{ env.workdir }}
        env:
          WEB_API_KEY: ${{ secrets.WEB_API_KEY }}
          WEBHOOK_SECRET: this_is_a_secret
          GH_TEST_TOKEN: ${{ secrets.GH_TEST_TOKEN }}
          GH_TEST_ID: ${{ secrets.GH_TEST_ID }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: pipenv run test
          
      - name: Send test report
        uses: 5monkeys/cobertura-action@master
        if: github.event_name == 'pull_request'
        with:
          path: '${{ env.workdir }}/coverage.xml'
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 95
          skip_covered: False
          show_line: True
  
  deploy:
    name: Deploy
    needs: test
    if: github.event_name == 'push'
    environment: Prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get short SHA
        id: short_sha
        run: echo '::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)'

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install pipenv and generate requirements.txt
        working-directory: ${{ env.workdir }}
        run: |
          pip install pipenv
          pipenv install --deploy
          pipenv lock -r > ./app/requirements.txt
        
        # note: does not set to 'allow unauthenticated' or memory, deploy manually first
      - name: Deploy Game Core Function
        uses: google-github-actions/deploy-cloud-functions@v0.1.2
        with:
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          service_account_email: ${{ secrets.GCP_FUNCTIONS_SERVICE_ACCOUNT }}
          source_dir: '${{ env.workdir }}/app'
          name: create_new_game
          event_trigger_type: providers/cloud.pubsub/eventTypes/topic.publish
          event_trigger_resource: projects/${{ secrets.GCP_PROJECT_ID }}/topics/create_new_game
          runtime: python39
          env_vars: 'APP_VERSION=${{ steps.short_sha.outputs.sha7 }}'

      - name: Deploy Github auth Function
        uses: google-github-actions/deploy-cloud-functions@v0.1.2
        with:
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          service_account_email: ${{ secrets.GCP_FUNCTIONS_SERVICE_ACCOUNT }}
          source_dir: '${{ env.workdir }}/app'
          name: github_auth_flow
          runtime: python39
          env_vars: 'WEB_API_KEY=${{ secrets.WEB_API_KEY }},APP_VERSION=${{ steps.short_sha.outputs.sha7 }}'
      
      - name: Deploy Webhook listener Function
        uses: google-github-actions/deploy-cloud-functions@v0.1.2
        with:
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          service_account_email: ${{ secrets.GCP_FUNCTIONS_SERVICE_ACCOUNT }}
          source_dir: '${{ env.workdir }}/app'
          name: github_webhook_listener
          runtime: python39
          env_vars: 'WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }},APP_VERSION=${{ steps.short_sha.outputs.sha7 }}'

      - name: Deploy Tick
        uses: google-github-actions/deploy-cloud-functions@v0.1.2
        with:
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          service_account_email: ${{ secrets.GCP_FUNCTIONS_SERVICE_ACCOUNT }}
          source_dir: '${{ env.workdir }}/app'
          name: tick
          event_trigger_type: providers/cloud.pubsub/eventTypes/topic.publish
          event_trigger_resource: projects/${{ secrets.GCP_PROJECT_ID }}/topics/tick
          runtime: python39
          env_vars: 'APP_VERSION=${{ steps.short_sha.outputs.sha7 }}'